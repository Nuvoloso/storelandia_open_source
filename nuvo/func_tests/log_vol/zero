#!/bin/bash
# Copyright 2019 Tad Lebeck
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


TEST_NAME="zero"

NUVO_FUNC_TEST_VALGRIND=false

# setup the cluster - a small cluster with small devices for example.
source ./fake_cluster $1
num_servers=1
devices_per_server=1
size_of_device=20G
size_of_parcel=1073741824
fake_cluster_create $num_servers $devices_per_server $size_of_device $size_of_parcel

# now create and use a volume
ROOT_DEVICE_UUID=${DEV_UUIDS[0]}
VOL_SERVER=${DEV_SERVER[$ROOT_DEVICE_UUID]}
fake_cluster_create_vol $VOL_SERVER $ROOT_DEVICE_UUID 10737418240
VOL_UUID=${VOL_UUIDS[0]}

# add parcels to the volume
fake_cluster_grow_volume_percent $VOL_UUID 100

# export the active lun
fake_cluster_export_active $VOL_UUID

# ----------------------------------------------------------------------
# now I can do some test stuff
NUVOVOL=$(fake_cluster_active_path $VOL_UUID)

#dd around 10G writes

sudo dd if=/dev/zero of=$NUVOVOL bs=128K count=81920 status=progress

# Sync before unexport if FUSE writeback cache is enabled.
# Unexport will reject new I/O and wait for pending I/O to complete.
sync $NUVOVOL

#unexport close and reopen for triggering replay

fake_cluster_unexport_active $VOL_UUID

fake_cluster_close_vol $VOL_UUID
fake_cluster_open_vol $VOL_UUID

rand_seed1=$RANDOM

#if do_io is specified, do a few more fios after the replay

if [[ $# == 2 && $2 == "do_io" ]]; then
    fake_cluster_export_active $VOL_UUID
    fio --name=test --verify=crc32c --rw=randwrite --size=1G --io_size=10M --ioengine=libaio --iodepth=1\
     --bs=4K --direct=1 --numjobs=1 --unlink=0 --filename=$NUVOVOL --randseed $rand_seed1
    sync $NUVOVOL
    fake_cluster_unexport_active $VOL_UUID

    fake_cluster_close_vol $VOL_UUID
    fake_cluster_open_vol $VOL_UUID
    fake_cluster_export_active $VOL_UUID
    fio --name=test --verify=crc32c --rw=randwrite --size=1G --io_size=10M --ioengine=libaio --iodepth=1\
    --bs=4K --direct=1 --numjobs=1 --unlink=0 --filename=$NUVOVOL --randseed $rand_seed1
    sync $NUVOVOL
    fake_cluster_unexport_active $VOL_UUID
fi

# cluster tear-down is handled in finish
