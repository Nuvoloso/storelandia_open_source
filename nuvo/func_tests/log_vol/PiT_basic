#!/bin/bash
# Copyright 2019 Tad Lebeck
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


TEST_NAME="PiT Basic"

# setup the cluster - a small cluster with small devices for example.
source ./fake_cluster $1
num_servers=1
devices_per_server=2
size_of_device=512M
size_of_parcel=67108864
fake_cluster_create $num_servers $devices_per_server $size_of_device $size_of_parcel

# now create and use a volume
ROOT_DEVICE_UUID=${DEV_UUIDS[0]}
VOL_SERVER=${DEV_SERVER[$ROOT_DEVICE_UUID]}
fake_cluster_create_vol $VOL_SERVER $ROOT_DEVICE_UUID 1024000000
VOL_UUID=${VOL_UUIDS[0]}

# add parcels to the volume
fake_cluster_grow_volume_percent $VOL_UUID 100

# ----------------------------------------------------------------------
# now I can do some test stuff
fake_cluster_export_active $VOL_UUID
NUVOVOL=$(fake_cluster_active_path $VOL_UUID)
TEMPFILE=/tmp/t$$
COPYFILE=/tmp/c$$
RANDFILE=/dev/urandom

################
# PiT Commands
################

pit_uuid=$( uuidgen )

echo "Creating PiT without being paused"

fake_cluster_create_pit $VOL_UUID $pit_uuid "create-pit without pause should have failed but succeeded"

echo "pausing IO"
fake_cluster_pause_io $VOL_UUID
echo "pausing IO already paused"
fake_cluster_pause_io $VOL_UUID
echo "listing No PiTs"
fake_cluster_list_pits $VOL_UUID
echo "creating PiT"
fake_cluster_create_pit $VOL_UUID $pit_uuid
echo "listing PiTs, one exists"
fake_cluster_list_pits $VOL_UUID

echo "creating PiT Duplicate UUID"
fake_cluster_create_pit $VOL_UUID $pit_uuid "create-pit with a duplicate uuid should have failed but succeeded"

echo "delete PiT while paused"
fake_cluster_delete_pit $VOL_UUID $pit_uuid "delete-pit while paused should fail but succeeded"

fake_cluster_resume_io $VOL_UUID

# Do IO during pit delete to catch CUM-1511
fio --name=test --verify=crc32c --rw=randwrite --size=1024000000 --io_size=50M --ioengine=libaio --iodepth=1 --bs=4K --direct=1 --numjobs=1 --unlink=0 --filename=$NUVOVOL --randseed $RANDOM &
FIO_PID=$!
fake_cluster_delete_pit $VOL_UUID $pit_uuid
wait $FIO_PID
echo "delete non-existent pit"
fake_cluster_delete_pit $VOL_UUID $pit_uuid "delete of non-existent PiT should fail"

sync
echo "Snapshot export exercise"
for i in `seq 1 5` ; do
    pituuid=`uuidgen`
    fake_cluster_pause_io $VOL_UUID
    fake_cluster_create_pit $VOL_UUID $pituuid
    fake_cluster_resume_io $VOL_UUID
    fake_cluster_export_pit $VOL_UUID $pituuid
    NUVOPIT=$(fake_cluster_pit_path $pituuid)

    dd if=${NUVOPIT} of=/dev/null bs=1M count=1

    fake_cluster_unexport_pit $pituuid
    fake_cluster_delete_pit $VOL_UUID $pituuid
done

fake_cluster_unexport_active $VOL_UUID

for vol in ${VOL_UUIDS[*]}
do
    fake_cluster_close_vol $vol
    fake_cluster_destroy_vol $vol
done
