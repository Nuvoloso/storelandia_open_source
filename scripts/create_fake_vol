#!/bin/bash
# Copyright 2019 Tad Lebeck
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


TEST_NAME="create vol script"

# setup the cluster - a small cluster with small devices for example.
# ASSUMES:
#    - you have done build
#    - are running from storelandia/scripts
#    - have a storelandia/scripts/nuvo_vm
# If you want to run nuvo (or nuvo_gperftools) under a tool:
#   GDB:
#       export NUVO_FUNC_TEST_TOOL=gdb
#   VALGRIND:
#       export NUVO_FUNC_TEST_TOOL=valgrind
#   CALLGRIND:
#       export NUVO_FUNC_TEST_TOOL=callgrind
sudo -v
source ../build/Debug/nuvo/func_tests/log_vol/fake_cluster ./nuvo_vm ../build/Debug/
if [ ! -f ../build/Debug/nuvo/func_tests/log_vol/fake_cluster ]; then
   echo "Script ../build/Debug/nuvo/func_tests/log_vol/fake_cluster does not exist."
   exit
fi
if [ ! -f ../build/Debug/nuvo/nuvo ]; then
   echo "Script ../build/Debug/nuvo/nuvo does not exist."
   exit
fi
if [ ! -f ./nuvo_vm ]; then
   echo "Need nuvo_vm command."
   exit
fi

# cluster parameters change these if you want
num_servers=1
devices_per_server=2
size_of_device=30G
size_of_parcel=$(expr 64 \* 1024 \* 1024)
fake_cluster_create $num_servers $devices_per_server $size_of_device $size_of_parcel

# Now going to create a volume.
#    - If you have mutiple servers and want a volume with root
#      on a "remote" nuvo, change the 0 to 1 in ROOT_DEVICE_UUID
ROOT_DEVICE_UUID=${DEV_UUIDS[0]}
VOL_SERVER=${DEV_SERVER[$ROOT_DEVICE_UUID]}
volume_size=40960000000
fake_cluster_create_vol $VOL_SERVER $ROOT_DEVICE_UUID $volume_size
VOL_UUID=${VOL_UUIDS[0]}
# add parcels to the volume
fake_cluster_grow_volume_percent $VOL_UUID 20

# export the active lun
fake_cluster_export_active $VOL_UUID
LUN_UUID=$VOL_UUID

set +x ; prompt "Exported vol, Hit Enter to write filesystem and mount" ; set -x

fake_cluster_vol_mkfs $LUN_UUID
fake_cluster_mount_lun $LUN_UUID
LUN_PATH=${LUN_MOUNT_POINT[$LUN_UUID]}

echo "Volume exported at " $LUN_PATH

# You could do other things here:

set +x
prompt "Hit Enter to Shut things down"
set -x
