#!/bin/bash

set -e
set -x
set -u

# INSTRUCTIONS
#
# the purpose of this test is to simulate crash replay
# 
# create
#    /mnt/nuvoloso1
#    /mnt/vol1
#
# Copy a nuvo_vm into this directory.
#
# Start up the nuvo process under gdb.
#
# sudo gdb --args build/Debug/nuvo/nuvo -f /mnt/nuvoloso1 socket=/tmp/sock1 port=32423
# continue in gdb prompt

# Then run this script in normal mode
# crash_replay_mono_test 0 #(0 indicates normal mode)

# The script would halt nuvo without closing the vol
# you would see a SIBINT in the gdb prompt
# get out of gdb 
# sudo umount /mnt/nuvoloso1
# sudo gdb --args build/Debug/nuvo/nuvo -f /mnt/nuvoloso1 socket=/tmp/sock1 port=32423
# crash_replay_mono_test 1 #(1 indicates replay mode)

# TODO : port this test to functional test framework


NODE1_SOCKET=/tmp/sock1
NODE1_UUID=cdea706c-a0ef-11e7-abc4-cec278b6b50a
NODE1_PORT=32423

if [[ $# -ne 1 ]]; then
    echo "$0 <do_replay flag>"
fi
do_replay=$1

if [[ $do_replay -eq 0 ]]; then
    BACKING_DEV_SIZE=30480000000 
fi

PARCEL_SIZE=512000000 
VOLUME_SIZE=40960000000 
NUMBER_OF_PARCELS=20

# Truncate to 0 and then correct size to get zeroed device and avoid replay bugs.
DEV1=~/file1

if [[ $do_replay -eq 0 ]]; then
    truncate -s 0 $DEV1
    truncate -s $BACKING_DEV_SIZE $DEV1
fi

DEV1_UUID=847a68a9-0529-4ab1-b8ce-4fdf9db53b2f 
VOL1_UUID=2eed1c0e-bf8e-4dd0-a8e6-1ccf77f79848

ROOT_PARCEL=cc47905b-aa33-4251-b388-670be2212197

./nuvo_vm -s $NODE1_SOCKET use-node-uuid -u $NODE1_UUID

if [[ $do_replay -eq 0 ]]; then
    ./nuvo_vm -s $NODE1_SOCKET format-device -p $PARCEL_SIZE -d $DEV1 -u $DEV1_UUID
fi

./nuvo_vm -s $NODE1_SOCKET use-device -d $DEV1 -u $DEV1_UUID
./nuvo_vm -s $NODE1_SOCKET device-location -d $DEV1_UUID -n $NODE1_UUID

if [[ $do_replay -eq 0 ]]; then
    root_parcel_ret=$( ./nuvo_vm -s $NODE1_SOCKET create-volume -d $DEV1_UUID -v $VOL1_UUID -p $ROOT_PARCEL -s  $VOLUME_SIZE)
else
    root_parcel_ret=$( ./nuvo_vm -s $NODE1_SOCKET open-volume -d $DEV1_UUID -v $VOL1_UUID -p $ROOT_PARCEL) 
fi

./nuvo_vm -s $NODE1_SOCKET alloc-parcels -d $DEV1_UUID -v $VOL1_UUID -n $NUMBER_OF_PARCELS
./nuvo_vm -s $NODE1_SOCKET export -v $VOL1_UUID -e vol1

ls -l /mnt/nuvoloso1

if [[ $do_replay -eq 0 ]]; then
    fio --name=test --verify=crc32c --rw=randwrite --size=$VOLUME_SIZE --io_size=20M --ioengine=libaio --iodepth=1 --bs=4K --direct=1 --numjobs=1 --unlink=0 --filename=/mnt/nuvoloso1/vol1 --randseed 18336
else
    fio --name=test --verify=crc32c --verify_only --rw=randread --size=$VOLUME_SIZE --io_size=20M --ioengine=libaio --iodepth=1 --bs=4K --direct=1 --numjobs=1 --unlink=0 --filename=/mnt/nuvoloso1/vol1 --randseed 18336
fi

if [[ $do_replay -eq 1 ]]; then
    ./nuvo_vm -s $NODE1_SOCKET unexport -v $VOL1_UUID -e vol1
    ./nuvo_vm -s $NODE1_SOCKET close-volume -v $VOL1_UUID
fi
./nuvo_vm -s $NODE1_SOCKET halt
sudo umount /mnt/nuvoloso1
